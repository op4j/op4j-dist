<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">


<document>
  <properties>
    <title>Functions: FnObject</title>    
  </properties>
  <body>
  
    <section name="Functions: FnObject">

      

      <subsection name="1. Overview">

        <p> 
            <b><a href="http://www.op4j.org/apidocs/org/op4j/functions/FnObject.html">FnObject</a></b> is a <em>function hub class</em>
            containing a lot of static methods to work with Objects in general.             
        </p>
        
      </subsection>

      <subsection name="2. Functions">

<table border="0">
<thead><tr><th>Function name</th><th>Type</th><th width="240px">Params</th><th>Description</th></tr></thead>
<tbody>
<tr class="b"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object min<br />Object max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float min<br />float max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int min<br />int max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte min<br />byte max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double min<br />double max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long min<br />long max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>between</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short min<br />short max</td><td><p> Determines whether the target object is between min and max in value, this is, whether  <tt>target.compareTo(min) &gt;= 0 &amp;&amp; target.compareTo(max) &lt;= 0</tt>.  The target and the specified min and max have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>boolean object</td><td><p> Determines whether the target object and the specified object are equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>eqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />boolean object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>eqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>boolean object</td><td><p> Determines whether the target object and the specified object are equal in value, this is, whether <tt>target.compareTo(object) == 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>eqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />boolean object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are equal in value, this is, whether <tt>functionResult.compareTo(object) == 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object is greater or equal to the specified object in value, this is, whether <tt>target.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object is greater or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) >= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object is greater than the specified object in value, this is, whether <tt>target.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>greaterThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object is greater than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) > 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>intoSingletonArrayOf</b></td><td>Function&lt;T,T[]&gt;</td><td>Type&lt;T&gt; type</td><td><p> Creates an array of the specified type with only the target object in it. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>intoSingletonListOf</b></td><td>Function&lt;T,List&lt;T&gt;&gt;</td><td>Type&lt;T&gt; type</td><td><p> Creates a list of the specified type with only the target object in it. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>intoSingletonSetOf</b></td><td>Function&lt;T,Set&lt;T&gt;&gt;</td><td>Type&lt;T&gt; type</td><td><p> Creates a set of the specified type with only the target object in it. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>isNotNull</b></td><td>Function&lt;Object,Boolean&gt;</td><td></td><td><p> Determines whether the target object is null or not. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>isNotNullBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by</td><td><p> Determines whether the result of executing the specified function on the target object is null or not. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>isNull</b></td><td>Function&lt;Object,Boolean&gt;</td><td></td><td><p> Determines whether the target object is null or not. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>isNullBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by</td><td><p> Determines whether the result of executing the specified function on the target object is null or not. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object is less or equal to the specified object in value, this is, whether <tt>target.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessOrEqToBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object is less or equal to the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt;= 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object is less than the specified object in value, this is, whether <tt>target.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>lessThanBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object is less than the specified object parameter in value, this is, whether <tt>functionResult.compareTo(object) &lt; 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="b"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr class="a"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>boolean object</td><td><p> Determines whether the target object and the specified object are NOT equal by calling the <tt>equals</tt> method on the target object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="b"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr class="a"><td><b>notEqBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />boolean object</td><td><p> Determines whether the result of executing the specified function  on the target object and the specified object parameter are NOT equal by calling the <tt>equals</tt> method. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>Object object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>float object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>double object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>byte object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>short object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>int object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>long object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValue</b></td><td>Function&lt;Object,Boolean&gt;</td><td>boolean object</td><td><p> Determines whether the target object and the specified object are NOT equal in value, this is, whether <tt>target.compareTo(object) != 0</tt>. Both the target and the specified object have to implement  Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />Object object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />float object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />double object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />byte object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />short object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />int object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="b"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />long object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr class="a"><td><b>notEqValueBy</b></td><td>Function&lt;X,Boolean&gt;</td><td>IFunction&lt;X,?&gt; by<br />boolean object</td><td><p> Determines whether the result of executing the specified function on the target object and the specified object parameter are NOT equal in value, this is, whether <tt>functionResult.compareTo(object) != 0</tt>.  Both the function result and the specified object have to implement   Comparable. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>replaceWith</b></td><td>Function&lt;Object,T&gt;</td><td>T object</td><td><p> Replaces the target object with the object specified as a parameter. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toStr</b></td><td>Function&lt;Object,String&gt;</td><td></td><td></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toStrNullSafe</b></td><td>Function&lt;Object,String&gt;</td><td></td><td><p> Converts the target object to String using the default <tt>toString()</tt> method, returning null if target is null. </p></td></tr>
</tbody></table>

</subsection>
</section>
</body>
</document>