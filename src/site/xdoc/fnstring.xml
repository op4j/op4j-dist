<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">


<document>
  <properties>
    <title>Functions: FnString</title>    
  </properties>
  <body>
  
    <section name="Functions: FnString">

      

      <subsection name="1. Overview">

        <p>
        	<b><a href="http://www.op4j.org/apidocs/org/op4j/functions/FnString.html">FnString</a></b> is a <em>function hub class</em>
        	containing a lot of static methods returning functions that take a <b>String</b> object as its input. It includes 
        	conversions to numbers, calendar and escape functions among others.        	  
        </p>
        
      </subsection>

      <subsection name="2. Functions">

<table border="0">
<thead><tr><th>Function name</th><th>Type</th><th width="240px">Params</th><th>Description</th></tr></thead>
<tbody>
<tr class="b"><td><b>asciify</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> <i>ASCIIfies</i> a String containing text in (mainly) European languages by removing a set of  recognized diacritic symbols and performing a number of transformations. Calling this method is equivalent to calling {@link #asciify(AsciifyMode)} using the <tt>DEFAULT</tt> mode. </p></td></tr>
<tr class="a"><td><b>asciify</b></td><td>Function&lt;String,String&gt;</td><td>AsciifyMode mode</td><td><p> <i>ASCIIfies</i> a String containing text in (mainly) European languages by removing a set of  recognized diacritic symbols and performing a number of transformations, determined by the <tt> AsciifyMode</tt> parameter. </p> <p> Transformations for <tt>AsciifyMode.DEFAULT</tt> are: </p> <ul>   <li>&#192;,&#193;,&#194;,&#195;,&#196;,&#197; / &#224;,&#225;,&#226;,&#227;,&#228;,&#229; = A / a</li>   <li>&#198; / &#230; = AE / ae</li>   <li>&#199; / &#231; = C / c</li>   <li>&#200;,&#201;,&#202;,&#203; / &#232;,&#233;,&#234;,&#235; = E / e</li>   <li>&#204;,&#205;,&#206;,&#207; / &#236;,&#237;,&#238;,&#239; = I / i</li>   <li>&#208; / &#240; = D / d</li>   <li>&#209; / &#241; = N / n</li>   <li>&#210;,&#211;,&#212;,&#213;,&#214;,&#216; / &#242;,&#243;,&#244;,&#245;,&#246;,&#248; = O / o</li>   <li>&#217;,&#218;,&#219;,&#220; / &#249;,&#250;,&#251;,&#252; = U / u</li>   <li>&#221; / &#253;,&#255; = Y / y</li>   <li>&#222; / &#254; = TH / th</li>   <li>&#223; = "ss" if the preceding character is lower case, "SS" otherwise.</li> </ul> <p> Transformations for <tt>AsciifyMode.UMLAUT_E</tt> are the same as <tt>DEFAULT</tt> with the following differences: </p> <ul>   <li>&#196; / &#228; = AE / ae</li>   <li>&#214; / &#246; = OE / oe</li>   <li>&#220; / &#252; = UE / ue</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>capitalize</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Converts the first letter of each word in the target String to upper case. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>contains</b></td><td>Function&lt;String,Boolean&gt;</td><td>String regex</td><td><p> Determines whether the target String contains a fragment matching the specified regular expression. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>eq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Performs an <i>equals</i> operation between the target object and the specified one. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>escapeCSV</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Turns a String into a value valid for being a CSV column value, enclosed in double quotes if needed. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.escapeCsv()</tt>. From its definition: </p> <ul>   <li>If the value contains a comma, newline or double quote, then the       String value is written enclosed in double quotes.</li>   <li>Any double quote characters in the value are escaped with another double quote.</li>   <li>If the value does not contain a comma, newline or double quote, then the       String value is written unchanged (null values are ignored).</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>escapeHTML</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Escapes the characters in a <code>String</code> using HTML entities. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.escapeHtml()</tt>. From its definition: </p> <ul>   <li>The string <code>"bread" &amp; "butter"</code> becomes        <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.</li>   <li>Supports all known HTML 4.0 entities, including funky accents.       Note that the commonly used apostrophe escape character (&amp;apos;)       is not a legal entity and so is not supported).</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>escapeJavaScript</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Escapes the characters in a <code>String</code> using JavaScript String rules. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.escapeJavascript()</tt>. From its definition: </p> <ul>    <li>Escapes any values it finds into their JavaScript String form.       Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.)</li>   <li>So a tab becomes the characters <code>'\\'</code> and <code>'t'</code>.</li>   <li>The only difference between Java strings and JavaScript strings       is that in JavaScript, a single quote must be escaped.</li> </ul> <p>Example:</p> <ul>   <li>input string: <tt>He didn't say, &quot;Stop!&quot;</tt></li>   <li>output string: <tt>He didn\'t say, \&quot;Stop!\&quot;</tt></li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>escapeXML</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Escapes the characters in a <code>String</code> using XML entities. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.escapeXml()</tt>. From its definition: </p> <ul>   <li>For example: <tt>"bread" &amp; "butter"</tt> =>       <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.</li>   <li>Supports only the five basic XML entities (gt, lt, quot, amp, apos).       Does not support DTDs or external entities.</li>   <li>Note that unicode characters greater than 0x7f are currently escaped to     their numerical \\u equivalent. This may change in future releases.</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>extractAll</b></td><td>Function&lt;String,List&lt;String&gt;&gt;</td><td>String regex</td><td><p> Extracts every substring from the target String that match the specified regular expression. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>extractFirst</b></td><td>Function&lt;String,String&gt;</td><td>String regex</td><td><p> Extracts the first substring from the target String that matches the specified regular expression. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>extractLast</b></td><td>Function&lt;String,String&gt;</td><td>String regex</td><td><p> Extracts the last substring from the target String that matches the specified regular expression. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>fromHexadecimal</b></td><td>Function&lt;String,String&gt;</td><td>Charset charset</td><td><p> Converts the target String from the Hexadecimal representation of its bytes back into  a String using the specified Charset. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>greaterOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Returns whether the target object is greater or equal (using natural order, which is alphabetic for strings) to the specified object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>greaterThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Returns whether the target object is greater (using natural order, which is alphabetic for strings) than the specified object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>isNotNull</b></td><td>Function&lt;Object,Boolean&gt;</td><td></td><td><p> Returns whether the target object is null or not (true = no). </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>isNull</b></td><td>Function&lt;Object,Boolean&gt;</td><td></td><td><p> Returns whether the target object is null or not (true = yes). </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>join</b></td><td>Function&lt;List&lt;Object&gt;, String&gt;</td><td></td><td><p> Joins the string representation of the objects in the list (which might be Strings themselves) into a single String (no separator used). </p></td></tr>
<tr class="b"><td><b>join</b></td><td>Function&lt;List&lt;Object&gt;, String&gt;</td><td>String separator</td><td><p> Joins the string representation of the objects in the list (which might be Strings themselves) into a single String using the given separator. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>joinArray</b></td><td>Function&lt;Object[], String&gt;</td><td></td><td><p> Joins the string representation of the objects in the array (which might be Strings themselves) into a single String (no separator used). </p></td></tr>
<tr class="b"><td><b>joinArray</b></td><td>Function&lt;Object[], String&gt;</td><td>String separator</td><td><p> Joins the string representation of the objects in the array (which might be Strings themselves) into a single String using the given separator. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>lessOrEqTo</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Returns whether the target object is less or equal (using natural order, which is alphabetic for strings) to the specified object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>lessThan</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Returns whether the target object is less (using natural order, which is alphabetic for strings) than the specified object. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>matchAndExtract</b></td><td>Function&lt;String,String&gt;</td><td>String regex<br />int group</td><td><p> Matches the entire target String against the specified regular expression and extracts the specified group from it (as specified by <tt>java.util.regex.Matcher</tt>. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>matchAndExtractAll</b></td><td>Function&lt;String,List&lt;String&gt;&gt;</td><td>String regex<br />int... groups</td><td><p> Matches the entire target String against the specified regular expression and extracts the specified groups from it (as specified by <tt>java.util.regex.Matcher</tt>. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>matches</b></td><td>Function&lt;String,Boolean&gt;</td><td>String regex</td><td><p> Determines whether the target String matches the specified regular expression. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>notEq</b></td><td>Function&lt;Object,Boolean&gt;</td><td>String object</td><td><p> Performs an inverse <i>equals</i> operation between the target object and the specified one. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>replaceAll</b></td><td>Function&lt;String,String&gt;</td><td>String regex<br />String replacement</td><td><p> Replaces in the target String all substrings matching the specified regular expression with the specified replacement String. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>replaceFirst</b></td><td>Function&lt;String,String&gt;</td><td>String regex<br />String replacement</td><td><p> Replaces in the target String the first substring matching the specified regular expression with the specified replacement String. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>replaceLast</b></td><td>Function&lt;String,String&gt;</td><td>String regex<br />String replacement</td><td><p> Replaces in the target String the last substring matching the specified regular expression with the specified replacement String. </p> <p> Regular expressions must conform to the <tt>java.util.regex.Pattern</tt> format. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>split</b></td><td>Function&lt;String, List&lt;String&gt;&gt;</td><td></td><td><p> Splits a String into a list of substrings using a whitespace as a separator. </p></td></tr>
<tr class="a"><td><b>split</b></td><td>Function&lt;String, List&lt;String&gt;&gt;</td><td>String separator</td><td><p> Splits a String into a list of substrings using the given separator as a substrings separator (the separator is not included in the elements of the returned list). </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>splitAsArray</b></td><td>Function&lt;String, String[]&gt;</td><td></td><td><p> Splits a String into an array of substrings using a whitespace as a separator. </p></td></tr>
<tr class="a"><td><b>splitAsArray</b></td><td>Function&lt;String, String[]&gt;</td><td>String separator</td><td><p> Splits a String into an array of substrings using the given separator as a substrings separator (the separator is not included in the elements of the returned array). </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>strip</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Strips whitespace from both sides of the target String. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td></td><td><p> Converts a String into a BigDecimal, using the default configuration for for decimal point and precision. </p></td></tr>
<tr class="b"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>Locale locale</td><td><p> Converts a String into a BigDecimal, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="a"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>String locale</td><td><p> Converts a String into a BigDecimal, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="b"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a BigDecimal, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>int scale<br />RoundingMode roundingMode</td><td><p> Converts a String into a BigDecimal, using the default configuration for for decimal point and thousands separator and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  </p></td></tr>
<tr class="b"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>int scale<br />RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a BigDecimal, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value. </p></td></tr>
<tr class="a"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>int scale<br />RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a BigDecimal, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="b"><td><b>toBigDecimal</b></td><td>Function&lt;String,BigDecimal&gt;</td><td>int scale<br />RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a BigDecimal, using the specified decimal point configuration ( DecimalPoint) and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.. The target String should contain no thousand separators. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td></td><td><p> Converts a String into a BigInteger, using the default configuration. </p></td></tr>
<tr class="b"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>Locale locale</td><td><p> Converts a String into a BigInteger, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="a"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>String locale</td><td><p> Converts a String into a BigInteger, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="b"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a BigInteger, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>int radix</td><td><p> Converts a String into a BigInteger, using the specified radix for computing the equivalent number.  </p></td></tr>
<tr class="b"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>RoundingMode roundingMode</td><td><p> Converts a String into a BigInteger, using the default configuration for for decimal point and thousands separator. Rounding mode is used for removing the decimal part of the number.  </p></td></tr>
<tr class="a"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a BigInteger, using the specified decimal point configuration ( DecimalPoint). Rounding mode is used for removing the  decimal part of the number. The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a BigInteger, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. </p></td></tr>
<tr class="a"><td><b>toBigInteger</b></td><td>Function&lt;String,BigInteger&gt;</td><td>RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a BigInteger, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toBoolean</b></td><td>Function&lt;String,Boolean&gt;</td><td></td><td><p> Converts a String into a Boolean. Case is ignored, and all three  "true"/"false", "yes"/"no" and "on"/"off" versions are  supported.   </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.toBooleanObject()</tt>. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td></td><td><p> Converts a String into a Byte, using the default configuration. </p></td></tr>
<tr class="b"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>Locale locale</td><td><p> Converts a String into a Byte, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="a"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>String locale</td><td><p> Converts a String into a Byte, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="b"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a Byte, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>int radix</td><td><p> Converts a String into a Byte, using the specified radix for computing the equivalent number.  </p></td></tr>
<tr class="b"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>RoundingMode roundingMode</td><td><p> Converts a String into a Byte, using the default configuration for for decimal point and thousands separator. Rounding mode is used for removing the decimal part of the number.  </p></td></tr>
<tr class="a"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a Byte, using the specified decimal point configuration ( DecimalPoint). Rounding mode is used for removing the  decimal part of the number. The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a Byte, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. </p></td></tr>
<tr class="a"><td><b>toByte</b></td><td>Function&lt;String,Byte&gt;</td><td>RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a Byte, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toCalendar</b></td><td>Function&lt;String,Calendar&gt;</td><td>String pattern</td><td><p> Converts the target String to a <tt>java.util.Calendar</tt> by applying the specified pattern. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr class="a"><td><b>toCalendar</b></td><td>Function&lt;String,Calendar&gt;</td><td>String pattern<br />Locale locale</td><td><p> Converts the target String to a <tt>java.util.Calendar</tt> by applying the specified pattern and locale. The locale is needed for correctly parsing month names. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr class="b"><td><b>toCalendar</b></td><td>Function&lt;String,Calendar&gt;</td><td>String pattern<br />String locale</td><td><p> Converts the target String to a <tt>java.util.Calendar</tt> by applying the specified pattern and locale. The locale is needed for correctly parsing month names. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toDate</b></td><td>Function&lt;String,Date&gt;</td><td>String pattern</td><td><p> Converts the target String to a <tt>java.util.Date</tt> by applying the specified pattern. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr class="b"><td><b>toDate</b></td><td>Function&lt;String,Date&gt;</td><td>String pattern<br />Locale locale</td><td><p> Converts the target String to a <tt>java.util.Date</tt> by applying the specified pattern and locale. The locale is needed for correctly parsing month names. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr class="a"><td><b>toDate</b></td><td>Function&lt;String,Date&gt;</td><td>String pattern<br />String locale</td><td><p> Converts the target String to a <tt>java.util.Date</tt> by applying the specified pattern and locale. The locale is needed for correctly parsing month names. </p> <p> Pattern format is that of <tt>java.text.SimpleDateFormat</tt>. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td></td><td><p> Converts a String into a Double, using the default configuration for for decimal point and precision. </p></td></tr>
<tr class="a"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>Locale locale</td><td><p> Converts a String into a Double, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="b"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>String locale</td><td><p> Converts a String into a Double, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a Double, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>int scale<br />RoundingMode roundingMode</td><td><p> Converts a String into a Double, using the default configuration for for decimal point and thousands separator and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  </p></td></tr>
<tr class="a"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>int scale<br />RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a Double, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value. </p></td></tr>
<tr class="b"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>int scale<br />RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a Double, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toDouble</b></td><td>Function&lt;String,Double&gt;</td><td>int scale<br />RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a Double, using the specified decimal point configuration ( DecimalPoint) and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.. The target String should contain no thousand separators. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td></td><td><p> Converts a String into a Float, using the default configuration for for decimal point and precision. </p></td></tr>
<tr class="a"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>Locale locale</td><td><p> Converts a String into a Float, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="b"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>String locale</td><td><p> Converts a String into a Float, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a Float, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>int scale<br />RoundingMode roundingMode</td><td><p> Converts a String into a Float, using the default configuration for for decimal point and thousands separator and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  </p></td></tr>
<tr class="a"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>int scale<br />RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a Float, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value. </p></td></tr>
<tr class="b"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>int scale<br />RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a Float, using the specified locale for decimal point and thousands separator configuration and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.  Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toFloat</b></td><td>Function&lt;String,Float&gt;</td><td>int scale<br />RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a Float, using the specified decimal point configuration ( DecimalPoint) and establishing the specified scale. Rounding mode is used for setting the scale to the specified value.. The target String should contain no thousand separators. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toHexadecimal</b></td><td>Function&lt;String,String&gt;</td><td>Charset charset</td><td><p> Converts the target String into the Hexadecimal representation of its bytes using the  specified Charset to obtain them (the bytes). </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td></td><td><p> Converts a String into an Integer, using the default configuration. </p></td></tr>
<tr class="b"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>Locale locale</td><td><p> Converts a String into an Integer, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="a"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>String locale</td><td><p> Converts a String into an Integer, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="b"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into an Integer, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>int radix</td><td><p> Converts a String into an Integer, using the specified radix for computing the equivalent number.  </p></td></tr>
<tr class="b"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>RoundingMode roundingMode</td><td><p> Converts a String into an Integer, using the default configuration for for decimal point and thousands separator. Rounding mode is used for removing the decimal part of the number.  </p></td></tr>
<tr class="a"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into an Integer, using the specified decimal point configuration ( DecimalPoint). Rounding mode is used for removing the  decimal part of the number. The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into an Integer, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. </p></td></tr>
<tr class="a"><td><b>toInteger</b></td><td>Function&lt;String,Integer&gt;</td><td>RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into an Integer, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td></td><td><p> Converts a String into a Long, using the default configuration. </p></td></tr>
<tr class="a"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>Locale locale</td><td><p> Converts a String into a Long, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="b"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>String locale</td><td><p> Converts a String into a Long, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a Long, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>int radix</td><td><p> Converts a String into a Long, using the specified radix for computing the equivalent number.  </p></td></tr>
<tr class="a"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>RoundingMode roundingMode</td><td><p> Converts a String into a Long, using the default configuration for for decimal point and thousands separator. Rounding mode is used for removing the decimal part of the number.  </p></td></tr>
<tr class="b"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a Long, using the specified decimal point configuration ( DecimalPoint). Rounding mode is used for removing the  decimal part of the number. The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a Long, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. </p></td></tr>
<tr class="b"><td><b>toLong</b></td><td>Function&lt;String,Long&gt;</td><td>RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a Long, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toLowerCase</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Converts the target String to lower case. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td></td><td><p> Converts a String into a Short, using the default configuration. </p></td></tr>
<tr class="a"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>Locale locale</td><td><p> Converts a String into a Short, using the specified locale for decimal point and thousands separator configuration. </p></td></tr>
<tr class="b"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>String locale</td><td><p> Converts a String into a Short, using the specified locale for decimal point and thousands separator configuration. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr class="a"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>DecimalPoint decimalPoint</td><td><p> Converts a String into a Short, using the specified decimal point configuration ( DecimalPoint). The target String should contain no thousand separators. </p></td></tr>
<tr class="b"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>int radix</td><td><p> Converts a String into a Short, using the specified radix for computing the equivalent number.  </p></td></tr>
<tr class="a"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>RoundingMode roundingMode</td><td><p> Converts a String into a Short, using the default configuration for for decimal point and thousands separator. Rounding mode is used for removing the decimal part of the number.  </p></td></tr>
<tr class="b"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>RoundingMode roundingMode<br />DecimalPoint decimalPoint</td><td><p> Converts a String into a Short, using the specified decimal point configuration ( DecimalPoint). Rounding mode is used for removing the  decimal part of the number. The target String should contain no thousand separators. </p></td></tr>
<tr class="a"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>RoundingMode roundingMode<br />Locale locale</td><td><p> Converts a String into a Short, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. </p></td></tr>
<tr class="b"><td><b>toShort</b></td><td>Function&lt;String,Short&gt;</td><td>RoundingMode roundingMode<br />String locale</td><td><p> Converts a String into a Short, using the specified locale for determining decimal point. Rounding mode is used for removing the  decimal part of the number. Locale is specified as a String (for example: "en_US", "es_ES", etc.) </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>toUpperCase</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Converts the target String to upper case. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>trim</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Removes control characters (char &lt;= 32) from both ends of the target String. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>unCapitalize</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Converts the first letter of each word in the target String to lowercase </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>unescapeCSV</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Removes escaping from a String escaped for a CSV column. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.unescapeCsv()</tt>. From its definition: </p> <ul>   <li>Returns a <code>String</code> value for an unescaped CSV column.</li>   <li>If the value is enclosed in double quotes, and contains a comma, newline        or double quote, then quotes are removed.</li>    <li>Any double quote escaped characters (a pair of double quotes) are unescaped        to just one double quote.</li>   <li>If the value is not enclosed in double quotes, or is and does not contain a        comma, newline or double quote, then the String value is returned unchanged.</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>unescapeHTML</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Unescapes a string containing entity escapes to a string containing the actual Unicode characters corresponding to the escapes. Supports HTML 4.0 entities. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.unescapeHtml()</tt>. From its definition: </p> <ul>   <li>The string <tt>&amp;lt;Fran&amp;ccedil;ais&amp;gt;</tt>       will become <tt>&lt;Fran&ccedil;ais&gt;</tt></li>   <li>If an entity is unrecognized, it is left alone, and inserted       verbatim into the result string. e.g. <tt>&amp;gt;&amp;zzzz;x</tt> will       become <tt>&gt;&amp;zzzz;x</tt>.</li> </ul></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="b"><td><b>unescapeJavaScript</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Unescapes any JavaScript literals found in the <code>String</code>. </p> <p> For example, it will turn a sequence of <code>'\'</code> and <code>'n'</code> into a newline character, unless the <code>'\'</code> is preceded by another <code>'\'</code>. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.unescapeJavascript()</tt>. </p></td></tr>
<tr bgcolor="#A4A4A4" class=""><td bgcolor="#A4A4A4" colspan="4"></td></tr>
<tr class="a"><td><b>unescapeXML</b></td><td>Function&lt;String,String&gt;</td><td></td><td><p> Unescapes a string containing XML entity escapes to a string containing the actual Unicode characters corresponding to the escapes. </p> <p> This method calls <tt>org.apache.commons.lang.StringUtils.unescapeXml()</tt>. From its definition: </p> <ul>   <li>Supports only the five basic XML entities (gt, lt, quot, amp, apos).       Does not support DTDs or external entities.</li>   <li>Note that numerical \\u unicode codes are unescaped to their respective        unicode characters. This may change in future releases.</li> </ul></td></tr>
</tbody></table>



</subsection>
      
    </section>
  </body>
</document>